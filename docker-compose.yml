version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: .docker/api/Dockerfile
    depends_on:
      - db 
      - queue
    ports:
      - "${API_PORT}:${API_PORT}"
    image: "${API_NAME}"
    container_name: "${API_NAME}"
    environment:
      - ENV=${ENV}
      - PGSQL_HOST=db
      - PGSQL_PORT=${PGSQL_PORT}
      - PGSQL_USER=${PGSQL_USER}
      - PGSQL_PASSWORD=${PGSQL_PASSWORD}
      - PGSQL_DBNAME=${PGSQL_DBNAME}
      - PGSQL_NAME=${PGSQL_NAME}
      - PGSQL_DATA=${PGSQL_DATA}
      - RABBITMQ_QUEUE_NAME=${RABBITMQ_QUEUE_NAME}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_HOST=queue
      - RABBITMQ_NAME=${RABBITMQ_NAME}
    links:
      - queue
      - db
  writer:
    build:
      context: .
      dockerfile: .docker/writer/Dockerfile
    depends_on:
      - queue
    image: "${WRITER_NAME}"
    container_name: "${WRITER_NAME}"
    environment:
      - ENV=${ENV}
      - RABBITMQ_QUEUE_NAME=${RABBITMQ_QUEUE_NAME}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_NAME=${RABBITMQ_NAME}
  db:
    build:
      context: .
      dockerfile: .docker/postgres/Dockerfile
    ports:
      - "${PGSQL_PORT}:${PGSQL_PORT}"
    image: ${PGSQL_NAME}
    container_name: postgres
    environment:
      - PGDATA=${PGSQL_DATA}
      - POSTGRES_DB=${PGSQL_DBNAME}
      - POSTGRES_USER=${PGSQL_USER}
      - POSTGRES_PASSWORD=${PGSQL_PASSWORD}
  queue:
    image: rabbitmq:alpine
    container_name: rabbitmq
    ports:
        - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
        - "1${RABBITMQ_PORT}:1${RABBITMQ_PORT}"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/

volumes:
    rabbitmq_data:
    rabbitmq_log:
